using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

#pragma warning disable 414

public partial class DB_GameplayData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_GameplayData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_GameplayData(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5401001563619602715UL,17695080410472732298UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public List<LevelData> LevelData => BGCodeGenUtils.GetNested<LevelData>(_LevelData, Index);
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4994463281160213863UL, 16881620820440711842UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_LevelData;
	public static BansheeGz.BGDatabase.BGFieldNested _LevelData => _ufle12jhs77_LevelData ?? (_ufle12jhs77_LevelData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldNested>(MetaDefault, new BGId(4709068708365990338UL, 16956677537731115440UL), () => _ufle12jhs77_LevelData = null));
	private static readonly DB_GameplayData.Factory _factory0_PFS = new DB_GameplayData.Factory();
	private static readonly LevelData.Factory _factory1_PFS = new LevelData.Factory();
	private DB_GameplayData() : base(MetaDefault) {}
	private DB_GameplayData(BGId id) : base(MetaDefault, id) {}
	private DB_GameplayData(BGMetaEntity meta) : base(meta) {}
	private DB_GameplayData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static DB_GameplayData FindEntity(Predicate<DB_GameplayData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<DB_GameplayData> FindEntities(Predicate<DB_GameplayData> filter, List<DB_GameplayData> result=null, Comparison<DB_GameplayData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_GameplayData> action, Predicate<DB_GameplayData> filter=null, Comparison<DB_GameplayData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static DB_GameplayData GetEntity(BGId entityId) => (DB_GameplayData) MetaDefault.GetEntity(entityId);
	public static DB_GameplayData GetEntity(int index) => (DB_GameplayData) MetaDefault[index];
	public static DB_GameplayData GetEntity(string entityName) => (DB_GameplayData) MetaDefault.GetEntity(entityName);
	public static DB_GameplayData NewEntity() => (DB_GameplayData) MetaDefault.NewEntity();
	public static DB_GameplayData NewEntity(BGId entityId) => (DB_GameplayData) MetaDefault.NewEntity(entityId);
	public static DB_GameplayData NewEntity(Action<DB_GameplayData> callback) => (DB_GameplayData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((DB_GameplayData)entity)));
}

public partial class LevelData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new LevelData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new LevelData(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(4758901039758338057UL,13722262630447637157UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public DB_GameplayData DB_GameplayData
	{
		get => (DB_GameplayData) _DB_GameplayData[Index];
		set => _DB_GameplayData[Index] = value;
	}
	public System.Int32 ScoreMinimal
	{
		get => _ScoreMinimal[Index];
		set => _ScoreMinimal[Index] = value;
	}
	public System.Int32 ScoreMaximal
	{
		get => _ScoreMaximal[Index];
		set => _ScoreMaximal[Index] = value;
	}
	public System.Int32 AddedScore
	{
		get => _AddedScore[Index];
		set => _AddedScore[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5656537033341978569UL, 2012770750445085110UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_DB_GameplayData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _DB_GameplayData => _ufle12jhs77_DB_GameplayData ?? (_ufle12jhs77_DB_GameplayData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5207168903094958732UL, 10184280649880272056UL), () => _ufle12jhs77_DB_GameplayData = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ScoreMinimal;
	public static BansheeGz.BGDatabase.BGFieldInt _ScoreMinimal => _ufle12jhs77_ScoreMinimal ?? (_ufle12jhs77_ScoreMinimal = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5298989435623766482UL, 6991694109923702187UL), () => _ufle12jhs77_ScoreMinimal = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ScoreMaximal;
	public static BansheeGz.BGDatabase.BGFieldInt _ScoreMaximal => _ufle12jhs77_ScoreMaximal ?? (_ufle12jhs77_ScoreMaximal = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4905831601924861866UL, 11010717977577386430UL), () => _ufle12jhs77_ScoreMaximal = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_AddedScore;
	public static BansheeGz.BGDatabase.BGFieldInt _AddedScore => _ufle12jhs77_AddedScore ?? (_ufle12jhs77_AddedScore = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4903972363679665329UL, 8836603291340072102UL), () => _ufle12jhs77_AddedScore = null));
	private static readonly DB_GameplayData.Factory _factory0_PFS = new DB_GameplayData.Factory();
	private static readonly LevelData.Factory _factory1_PFS = new LevelData.Factory();
	private LevelData() : base(MetaDefault) {}
	private LevelData(BGId id) : base(MetaDefault, id) {}
	private LevelData(BGMetaEntity meta) : base(meta) {}
	private LevelData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static LevelData FindEntity(Predicate<LevelData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<LevelData> FindEntities(Predicate<LevelData> filter, List<LevelData> result=null, Comparison<LevelData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<LevelData> action, Predicate<LevelData> filter=null, Comparison<LevelData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static LevelData GetEntity(BGId entityId) => (LevelData) MetaDefault.GetEntity(entityId);
	public static LevelData GetEntity(int index) => (LevelData) MetaDefault[index];
	public static LevelData GetEntity(string entityName) => (LevelData) MetaDefault.GetEntity(entityName);
	public static LevelData NewEntity() => (LevelData) MetaDefault.NewEntity();
	public static LevelData NewEntity(BGId entityId) => (LevelData) MetaDefault.NewEntity(entityId);
	public static LevelData NewEntity(Action<LevelData> callback) => (LevelData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((LevelData)entity)));
	public static LevelData NewEntity(DB_GameplayData owner) => (LevelData) MetaDefault.NewEntity(owner);
	public static LevelData NewEntity(DB_GameplayData owner, BGId entityId) => (LevelData) MetaDefault.NewEntity(owner, entityId);
	public static LevelData NewEntity(DB_GameplayData owner, Action<LevelData> callback) => (LevelData) MetaDefault.NewEntity(owner, new BGMetaEntity.NewEntityContext(entity => callback((LevelData)entity)));
}
#pragma warning restore 414
